{
    "contents" : "# =============================================================================\n# Stat 133: Final Project\n# Part2 Data Analysis\n# Description: work with cleaned-precoessed csvs (storms.csv; tracks.csv) to\n# produce analysis of storms from 1980 to 2010\n# Data: International Best Track Archive for Climate Stewardship (IBTrACS)\n# ftp://eclipse.ncdc.noaa.gov/pub/ibtracs/v03r06/wmo/hurdat_format/basin/\n# Basin.NA.ibtracs_hurdat.v03r06.hdat\n\n# =============================================================================\n\n# Name:Tong Zhang 24540972, Zhiqiang Liao 24229382\n\n# =============================================================================\n# Load csv\n# =============================================================================\nlibrary(stringr)\nstorms<-read.csv('data/storms.csv', stringsAsFactors = FALSE)\ntracks<-read.csv('data/tracks.csv', stringsAsFactors = FALSE)\n\n\n# =============================================================================\n# Number of storms per year\n# =============================================================================\n\n# Extract years from date\ndate = as.Date(storms$date, '%m/%d/%Y')\nyear = format(date, '%Y')\n# Extract years that are from 1980 to 2010\nyear = year[which(year >= 1980 & year <= 2010)]\n\n# Find the frequency of storms in each year\nstormPerYear<-table(year)\n\n# Plot a bar graph\nbarplot(as.numeric(stormPerYear),\n                           names.arg = unique(year),\n        main = 'number of storms per year', \n        xlab = 'Year',ylab='number of storms' )\n\n# Open device\npdf(\"images/stormPerYearPlot.pdf\") \nbarplot(as.numeric(stormPerYear),\n        names.arg = unique(year),\n        main = 'number of storms per year', \n        xlab = 'Year',ylab='number of storms' )\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerYearPlot.png\", width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerYear),\n        names.arg = unique(year),\n        main = 'number of storms per year', \n        xlab = 'Year',ylab='number of storms' )\ndev.off() # close device\n\n# =============================================================================\n# Number of storms per year with wind >=35\n# =============================================================================\n# As date the date column\ndate = as.Date(tracks$date, '%m/%d/%Y')\n# Extract years \nyear = format(date, '%Y')\n# Extract years that are from 1980 to 2010\ntmpTracks = tracks[which(year >= 1980 & year <= 2010),]\nyear35Date = as.Date(storms$date[unique(tmpTracks$id[tmpTracks$wind>=35])], \n                     '%m/%d/%Y')\nyear35 = format(year35Date, \"%Y\")\n# Using table to find frequency of storms in each year\nstormPerYear35<-table(year35)\n# Plot a bar graph\nbarplot(as.numeric(stormPerYear35), \n                             names.arg=unique(year35), \n        main='number of storms per year with wind >=35',\n        xlab = 'Year', ylab='number of storms')\n\n# Open device\npdf(\"images/stormPerYear35Plot.pdf\") \nbarplot(as.numeric(stormPerYear35), \n        names.arg=unique(year35), \n        main='number of storms per year with wind >=35',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerYear35Plot.png\", width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerYear35), \n        names.arg=unique(year35), \n        main='number of storms per year with wind >=35',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# =============================================================================\n# Number of storms per year with wind >=64\n# =============================================================================\n# Years of which the storm's speed exceed 64\n\nyear64Date = as.Date(storms$date[unique(tmpTracks$id[tmpTracks$wind>=64])], \n                     '%m/%d/%Y')\n# Extract years\nyear64 = format(year64Date, \"%Y\")\n# Using table to find frequency of storms in each year\nstormPerYear64<-table(year64)\n\n# Plot a bar graph\nstormPerYear64Plot = barplot(as.numeric(stormPerYear64), \n                             names.arg=unique(year64),\n        main='number of storms per year with wind >= 64',\n        xlab = 'Year', ylab='number of storms')\n\n# Open device\npdf(\"images/stormPerYear64Plot.pdf\") \nstormPerYear64Plot = barplot(as.numeric(stormPerYear64), \n                             names.arg=unique(year64),\n                             main='number of storms per year with wind >= 64',\n                             xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerYear64Plot.png\", width = 1024, height = 900, res= 120) \nstormPerYear64Plot = barplot(as.numeric(stormPerYear64), \n                             names.arg=unique(year64),\n                             main='number of storms per year with wind >= 64',\n                             xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n\n# =============================================================================\n# Number of storms per year with wind >=96\n# =============================================================================\n# Extract years of which the storm's speed exceed 96\nyear96Date = as.Date(storms$date[unique(tmpTracks$id[tmpTracks$wind>=96])], \n                     '%m/%d/%Y')\n# Extract years\nyear96 = format(year96Date, \"%Y\")\n# Using table to find frequency of storms in each year\nstormPerYear96<-table(year96)\n# Plot a bar graph\nbarplot(as.numeric(stormPerYear96), \n                             names.arg=unique(year96),\n        main='number of storms per year with wind >= 96',\n        xlab = 'Year', ylab='number of storms')\n\n# Open device\npdf(\"images/stormPerYear96Plot.pdf\") \nbarplot(as.numeric(stormPerYear96), \n        names.arg=unique(year96),\n        main='number of storms per year with wind >= 96',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerYear96Plot.png\", \n    width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerYear96), \n        names.arg=unique(year96),\n        main='number of storms per year with wind >= 96',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Extract according to Month\n# =============================================================================\n# Number of storms per month\n# =============================================================================\n# As date the date column\ndate = as.Date(storms$date, '%m/%d/%Y')\n# Extract month and year from the date column\nmonthWithYear = format(date, '%m/%Y')\n# Extract year\nyear = format(date, '%Y')\n# Extract month and year with year from 1980 to 2010\nmonthWithYear = monthWithYear[year >= 1980 & year <= 2010]\n\n# Find the frequency of storms that happened in each month\nmonth = substring(text = monthWithYear, first = 1, last = 2)\nstormPerMonth<-table(month)\n# Plot\nmonthName = month.name[sort(as.numeric(unique(month)))]\nbarplot(as.numeric(stormPerMonth), \n        names.arg = monthName,\n        main='number of storms per Month',\n        xlab = 'Year', ylab='number of storms' )\n\n# Open device\npdf(\"images/stormPerMonthPlot.pdf\") \nbarplot(as.numeric(stormPerMonth), \n        names.arg = monthName,\n        main='number of storms per Month',\n        xlab = 'Year', ylab='number of storms' )\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerMonthPlot.png\", width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerMonth), \n        names.arg = monthName,\n        main='number of storms per Month',\n        xlab = 'Year', ylab='number of storms' )\ndev.off() # close device\n\n# =============================================================================\n# Number of storms per month with wind >=35\n# =============================================================================\n# As date the date column\ndate = as.Date(tracks$date, '%m/%d/%Y')\n# Extract month and Year from the date column\nmonthWithYear = format(date, '%m/%Y')\n# Extract year\nyear = format(date, '%Y')\n# Extract storms that are from 1980 to 2010\ntmpTracks = tracks[which(year >= 1980 & year <= 2010),]\n\n# Find the frequency of storms that happened in each month\nmonth35<-storms$date[unique(tmpTracks$id[tmpTracks$wind>=35])]\nmonth35 = as.Date(month35, '%m/%d/%Y')\nmonth35 = format(month35, '%m')\nstormPerMonth35<-table(month35)\n\n# Plot\nmonthName = month.name[sort(as.numeric(unique(month35)))]\nbarplot(as.numeric(stormPerMonth35),\n        names.arg = monthName,\n        main='number of storms per Month with wind >= 35 knots',\n        xlab = 'Year', ylab='number of storms')\n\n# Open device\npdf(\"images/stormPerMonth35Plot.pdf\") \nbarplot(as.numeric(stormPerMonth35),\n        names.arg = monthName,\n        main='number of storms per Month with wind >= 35 knots',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerMonth35Plot.png\", width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerMonth35),\n        names.arg = monthName,\n        main='number of storms per Month with wind >= 35 knots',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# =============================================================================\n# Number of storms per month with wind >=64\n# =============================================================================\n# Find the frequency of storms that happened in each month\nmonth64<-storms$date[unique(tmpTracks$id[tmpTracks$wind>=64])]\nmonth64 = as.Date(month64, '%m/%d/%Y')\nmonth64 = format(month64, '%m')\nstormPerMonth64<-table(month64)\n\n# Plot\nmonthName = month.name[sort(as.numeric(unique(month64)))]\nbarplot(as.numeric(stormPerMonth64), \n        names.arg = monthName,\n        main='number of storms per Month with wind >= 64 knots',\n        xlab = 'Year', ylab='number of storms')\n\npdf(\"images/stormPerMonth64Plot.pdf\") # open device\nbarplot(as.numeric(stormPerMonth64), \n        names.arg = monthName,\n        main='number of storms per Month with wind >= 64 knots',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerMonth64Plot.png\", width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerMonth64), \n        names.arg = monthName,\n        main='number of storms per Month with wind >= 64 knots',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# =============================================================================\n# Number of storms per month with wind >=96\n# =============================================================================\n# Find the frequency of storms that happened in each month\nmonth96<-storms$date[unique(tmpTracks$id[tmpTracks$wind>=96])]\nmonth96 = as.Date(month96, '%m/%d/%Y')\nmonth96 = format(month96, '%m')\nstormPerMonth96<-table(month96)\n\n# Plot\nmonthName = month.name[sort(as.numeric(unique(month96)))]\nbarplot(as.numeric(stormPerMonth96), \n        names.arg = monthName,\n        main='number of storms per Month with wind >= 96 knots',\n        xlab = 'Year', ylab='number of storms')\n\n# Open device\npdf(\"images/stormPerMonth96Plot.pdf\") \nbarplot(as.numeric(stormPerMonth96), \n        names.arg = monthName,\n        main='number of storms per Month with wind >= 96 knots',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# Open device\npng(\"images/stormPerMonth96Plot.png\", width = 1024, height = 900, res= 120) \nbarplot(as.numeric(stormPerMonth96), \n        names.arg = monthName,\n        main='number of storms per Month with wind >= 96 knots',\n        xlab = 'Year', ylab='number of storms')\ndev.off() # close device\n\n# =============================================================================\n# Annual numbers of storms >= 35/64/96\n# =============================================================================\n## Average \nmean35<-mean(stormPerYear35)\nmean64<-mean(stormPerYear64)\nmean96<-mean(stormPerYear96)\n## std\nstd35<-sd(stormPerYear35)\nstd64<-sd(stormPerYear64)\nstd96<-sd(stormPerYear96)\n## 25 percentile\nQ35<-summary(as.numeric(stormPerYear35))[2]\nQ64<-summary(as.numeric(stormPerYear64))[2]\nQ96<-summary(as.numeric(stormPerYear96))[2]\n## median\nmedian35<-summary(as.numeric(stormPerYear35))[3]\nmedian64<-summary(as.numeric(stormPerYear64))[3]\nmedian96<-summary(as.numeric(stormPerYear96))[3]\n## 75 percentile\nq35<-summary(as.numeric(stormPerYear35))[5]\nq64<-summary(as.numeric(stormPerYear64))[5]\nq96<-summary(as.numeric(stormPerYear96))[5]\n\n## table\nannual<-matrix(c(mean35,std35,Q35, median35,q35,\n                 mean64,std64,Q64, median64,q64,\n                 mean96,std96,Q96, median96,q96), ncol=5, byrow=TRUE)\ncolnames(annual)<-c('Avg','Std.Dev','25th','50th','75th')\nrownames(annual)<-c('35 knots','64 knots', '96 knots')\nannual = signif(annual, 4)\nannual<-as.table(annual)\n\n# =============================================================================\n# Regression Line\n# =============================================================================\n# Mean pressure and mean wind speed for each storm\nvec<-c(1:1777)\npressMean1<-sapply(vec, function(x) \n  mean(tmpTracks$press[tmpTracks$id==x]))\n# Remove zeros\npressMean<-pressMean1[pressMean1!=0]\npressMean = na.exclude(pressMean)\n# Mean wind speed\nwindMean1<-sapply(vec,function(x) \n  mean(tmpTracks$wind[tmpTracks$id==x]))\n# Remove zeros\nwindMean<- windMean1[pressMean1!=0]\nwindMean = na.exclude(windMean)\n\n# Find regression \nreg = lm(pressMean ~ windMean)\n\n# Plot regression\nplot(windMean, pressMean,xlab = 'mean wind speed', ylab = 'mean pressure')\ntitle('Mean Wind VS Mean Wind Speed for Each Storm ')\nabline(reg)\n\n# Open device\npdf(\"images/meanWindPressureReg.pdf\") \nreg = lm(pressMean ~ windMean)\nplot(windMean, pressMean,xlab = 'mean wind speed', ylab = 'mean pressure')\ntitle('Mean Wind VS Mean Wind Speed for Each Storm ')\nabline(reg)\ndev.off() # close device\n\n# Open device\npng(\"images/meanWindPressureReg.png\", width = 1024, height = 900, res= 120) \nreg = lm(pressMean ~ windMean)\nplot(windMean, pressMean,xlab = 'mean wind speed', ylab = 'mean pressure')\ntitle('Mean Wind VS Mean Wind Speed for Each Storm')\nabline(reg)\ndev.off() # close device\n\n\n# =============================================================================\n# Regression analysis 2\n# =============================================================================\n# Median pressure and median wind speed for each storm\nvec<-c(1:1777)\npressMedian1<-sapply(vec,function(x) \n  median(tmpTracks$press[tmpTracks$id==x]))\n# Mean wind speed\nwindMedian1<-sapply(vec,function(x) \n  median(tmpTracks$wind[tmpTracks$id==x]))\n# Remove zeros\npressMedian<-pressMedian1[pressMedian1!=0]\npressMedian = na.exclude(pressMedian)\nwindMedian<-windMedian1[pressMedian1!=0]\nwindMedian = na.exclude(windMedian)\n\n# Find Regression\nreg1 = lm(pressMedian ~ windMedian)\nplot(windMedian, pressMedian, xlab = 'Median wind speed', \n     ylab = 'Median pressure')\ntitle('Median Wind Speed VS Median Pressure For Each Storm ')\nabline(reg1)\n\n# open device\npdf(\"images/medianWindPressureReg.pdf\") \nreg1 = lm(pressMedian ~ windMedian)\nplot(windMedian, pressMedian, xlab = 'Median wind speed', \n     ylab = 'Median pressure')\ntitle('Median Wind Speed VS Median Pressure For Each Storm ')\nabline(reg1)\ndev.off() # close device\n\n# open device\npng(\"images/medianWindPressureReg.png\", width = 1024, height = 900, res= 120) \nreg1 = lm(pressMedian ~ windMedian)\nplot(windMedian, pressMedian, xlab = 'Median wind speed', \n     ylab = 'Median pressure')\ntitle('Median Wind Speed VS Median Pressure For Each Storm ')\nabline(reg1)\ndev.off() # close device\n\n\n\n\n\n\n\n\n",
    "created" : 1439599398541.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3549826514",
    "id" : "BF0DFB8A",
    "lastKnownWriteTime" : 1439599341,
    "path" : "~/Dropbox/stat133_final/Final/code/analysis_code.R",
    "project_path" : "code/analysis_code.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}